{"version":3,"sources":["components/Header/index.js","components/Row/index.js","components/Col/index.js","components/Search/index.js","components/Card/index.js","components/Container/index.js","components/List/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["Header","className","Row","props","fluid","Col","size","split","map","join","Search","role","type","placeholder","aria-label","onChange","onClick","Card","key","id","department","branch","src","avatarUrl","alt","name","position","Container","employees","employee","List","items","category","item","Wrapper","state","filterCategory","Employees","handleChange","event","target","getAttribute","handleSort","handleFilter","handleSearch","sortKey","toLowerCase","sortedEmployees","sort","dynamicSort","setState","property","a","b","localeCompare","filteredEmployees","filterKey","handleClearFilter","filter","searchKey","value","searchResult","forEach","includes","push","innerHTML","previousSibling","reset","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b757e0f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n  return (\n    <header className=\"header text-center text-white bg-dark \" >\n      <h1 className = \"p-3 m-0\"> Directory </h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\n}\n\nexport default Row;\n","import React from \"react\";\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return <div className={size} {...props} />;\n}\n\nexport default Col;\n","import React from \"react\";\n\nfunction Search(props) {\n  return (\n    <div className=\"m-2\" >\n    <form className=\"form-inline d-inline\">\n      <input\n        role={props.role}\n        className=\"form-control mr-sm-2\"\n        type=\"search\"\n        placeholder=\"Search by name\"\n        aria-label=\"Search\"\n        onChange={props.onChange}\n      ></input>\n    </form>\n     <button className=\"btn btn-outline-success d-inline\" onClick={props.onClick}>\n     Clear\n   </button>\n   </div>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n  return (\n    \n      <div className=\"card\" key={props.id}   department={props.department} branch={props.branch} >\n        <div className=\"row no-gutters row-cols-3\">\n          <div className=\"col-2 \" >\n            <img src={props.avatarUrl} className=\"card-img mx-3\" alt=\"...\"></img>\n          </div>\n          <div className=\"col\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Name: {props.name}</h5>\n              <p className=\"card-text\">Position: {props.position}</p>\n            </div>\n          </div>\n          <div className=\"col\">\n            <div className=\"card-body\">\n              <p className=\"card-text\">Department: {props.department}</p>\n              <p className=\"card-text\">Branch: {props.branch}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n   \n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"../Card\";\n\n\nfunction Container(props) {\n const employees = props.employees;\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`} {...props} >\n    {employees.map(employee => (\n          <Card\n            id={employee.id}\n            key={employee.id}\n            name={employee.name}\n            position={employee.position}\n            department={employee.department}\n            branch={employee.branch}\n            avatarUrl ={employee.avatarUrl}\n          />\n        ))}\n  \n  </div>;\n}\n\nexport default Container;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction List(props) {\n  const items = props.items.split(\",\")\n  return (\n    <div className=\"list-group m-2\">\n      <button\n        type=\"button\"\n        className=\"list-group-item list-group-item-action bg-primary text-white header\"\n      >\n        {props.role} by {props.category}:\n      </button>\n\n      {items.map(item => (\n        <button className='list-group-item list-group-item-action' role={props.role} category={props.category} id={item} key={item} onClick={props.onClick}  >\n          {item}\n        </button>\n      ))}\n     \n    </div>\n  );\n}\n\nexport default List;\n","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport Row from \"../Row\";\nimport Col from \"../Col\";\nimport Search from \"../Search\";\nimport Container from \"../Container\";\nimport List from \"../List\";\nimport Employees from \"../../employees.json\";\n\nclass Wrapper extends Component {\n  // Setting the component's initial state\n  state = {\n    filterCategory: \"\",\n    employees: Employees,\n  };\n\n  handleChange = (event) => {\n    const role = event.target.getAttribute(\"role\");\n    // sort by name, department or branch\n    if (role === \"Sort\") {\n      this.handleSort(event);\n    } else if (role === \"Filter\") {\n      // filter by department and/or branch\n      this.handleFilter(event);\n    } else if (role === \"Search\") {\n      //search employees by name\n      this.handleSearch(event);\n    }\n  };\n\n  //sort employees by name, department or branch\n  handleSort = (event) => {\n    const sortKey = event.target.getAttribute(\"id\").toLowerCase();\n    const sortedEmployees = this.state.employees.sort(\n      this.dynamicSort(sortKey)\n    );\n    this.setState({ employees: sortedEmployees });\n  };\n   \n  // function to sort employees by name, department and branch\n  dynamicSort = (property) => {\n    return function (a, b) {\n      return a[property].localeCompare(b[property]);\n    };\n  };\n\n  //filter employees by department and/or branch\n  handleFilter = (event) => {\n    //get the category : department , branch\n    const category = event.target.getAttribute(\"category\").toLowerCase();\n    // get the filter key: the department/ branch name\n    const filterKey = event.target.getAttribute(\"id\");\n    let filteredEmployees;\n\n    if (filterKey === \"Clear Filter\") {\n      // clear filter category and reset the employees\n      this.handleClearFilter(event);\n    } else {\n      //taking filter cumulation into consideration(eg: BC+HR, BC+ON)\n      //if the filters are in the same category, then lift the previous filter (eg:BC + ON)\n      if (this.state.filterCategory === category) {\n        filteredEmployees = Employees.filter(\n          (event) => event[category] === filterKey\n        );\n      } else {\n        // if filters doesn't conflict, execute filter on the filtered employees (eg:BC + HR)\n        filteredEmployees = this.state.employees.filter(\n          (event) => event[category] === filterKey\n        );\n      }\n      this.setState({\n        employees: filteredEmployees,\n        filterCategory: category,\n      });\n    }\n  };\n\n  // search employees by name\n  handleSearch = (event) => {\n    // get the eployee name searched\n    let searchKey = event.target.value;\n     // map through the employees name to find names include the searchKey\n    let searchResult =[]\n     Employees.forEach(employee =>{\n       if(employee.name.toLowerCase().includes(searchKey.toLowerCase()))  searchResult.push(employee)\n     })\n    this.setState({ employees: searchResult });\n  };\n\n  //lift all filters that are applied before\n  handleClearFilter = (event) => {\n    // reset the search box if user is clearing name search\n    let inputBox = event.target.innerHTML\n    if(inputBox === \"Clear\") {\n      event.target.previousSibling.reset()\n    }\n    //reset the employees info and filters saved \n    this.setState({ employees: Employees, filterCategory: \"\" });\n  };\n\n\n\n  render() {\n    return (\n      <main className=\"wrapper\">\n        <Row>\n          <Col size=\"md-4 lg-3\">\n            <Search\n              role=\"Search\"\n              onChange={this.handleChange}\n              onClick={this.handleClearFilter}\n            />\n            <List\n              role=\"Sort\"\n              items=\"Name,Department,Branch\"\n              onClick={this.handleChange}\n            />\n            <List\n              role=\"Filter\"\n              category=\"Department\"\n              items=\"Clear Filter,Finance,HR,Operation,Sales\"\n              onClick={this.handleChange}\n            />\n            <List\n              role=\"Filter\"\n              category=\"Branch\"\n              items=\"Clear Filter,ON,BC,QC\"\n              onClick={this.handleChange}\n            />\n          </Col>\n          <Col size=\"md-8 lg-9\">\n            <Container fluid=\"true\" employees={this.state.employees} />\n          </Col>\n        </Row>\n      </main>\n    );\n  }\n}\n\nexport default Wrapper;\n","import React from \"react\";\n\nimport Header from \"./components/Header\";\nimport Wrapper from \"./components/Wrapper\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Wrapper />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}